# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
    branches:
      include:
      - main
    paths:
      include:
      - Shopping/Shopping.Client/*
      - aks/shoppingclient.yaml

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'b471b39a-281e-4a90-b6de-44e207b6093f'
  imageRepository: 'shoppingclient'
  containerRegistry: 'rundevopstest.azurecr.io'
  dockerfilePath: 'Shopping/Shopping.Client/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'shoppingacr20662ab5-auth'
  k8sNamespace: 'default'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)/Shopping
        tags: |
          $(tag)
          
    - upload: aks
      artifact: aks

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'aspnetrunrundevops'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: Replace tokens in **/*
            inputs:
              rootDirectory: $(Pipeline.Workspace)/aks
              targetFiles: '**/*.yaml'
              keepToken: true
              tokenPrefix: __
              tokenSuffix: __
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'aspnetrunrundevops-rundevops-test-default-1685132343493'
              secretType: 'dockerRegistry'
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespace)
              dockerRegistryEndpoint: 'rundevopstest' #$(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'aspnetrunrundevops-rundevops-test-default-1685132343493'
              namespace: $(k8sNamespace)
              manifests: |
                $(Pipeline.Workspace)/aks/shoppingclient.yaml
                $(Pipeline.Workspace)/aks/shoppingapi-configmap.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

